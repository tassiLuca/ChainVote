{
  "openapi": "3.0.0",
  "info": {
    "title": "Chainvote API documentation",
    "description": "This is the API documentation for the Chainvote API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local server"
    }
  ],
  "components": {
    "schemas": {
      "CommonResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "True if the request was successful",
            "example": true
          },
          "date": {
            "type": "string",
            "description": "The date of the request",
            "example": "2021-06-01T16:00:00.000Z"
          },
          "data": {
            "type": "object",
            "description": "The data returned by the request"
          },
          "code": {
            "type": "integer",
            "description": "The HTTP status code of the request",
            "example": 200
          }
        }
      },
      "TooManyRequestError": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "value": false
          },
          "date": {
            "type": "string",
            "description": "The date of the request",
            "example": "2021-06-01T16:00:00.000Z"
          },
          "error": {
            "type": "object",
            "description": "The error returned by the request",
            "properties": {
              "name": {
                "type": "string",
                "value": "Too Many Requests"
              },
              "description": {
                "type": "string",
                "value": "Api limit reached"
              },
              "type": {
                "type": "string",
                "value": 7
              },
              "code": {
                "type": "integer",
                "value": 409
              }
            }
          }
        }
      },
      "BadRequestError": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "value": false
          },
          "date": {
            "type": "string",
            "description": "The date of the request",
            "example": "2021-06-01T16:00:00.000Z"
          },
          "error": {
            "type": "object",
            "description": "The error returned by the request",
            "properties": {
              "name": {
                "type": "string",
                "value": "Bad Request"
              },
              "description": {
                "type": "string",
                "example": "Some validation errors occurred on the request."
              },
              "type": {
                "type": "string",
                "value": 4
              },
              "code": {
                "type": "integer",
                "value": 400
              }
            }
          }
        }
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "value": false
          },
          "date": {
            "type": "string",
            "description": "The date of the request",
            "example": "2021-06-01T16:00:00.000Z"
          },
          "error": {
            "type": "object",
            "description": "The error returned by the request",
            "properties": {
              "name": {
                "type": "string",
                "value": "Internal server error"
              },
              "description": {
                "type": "string",
                "example": "Error while processing the request"
              },
              "type": {
                "type": "string",
                "value": 7
              },
              "code": {
                "type": "integer",
                "value": 500
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/code/generate": {
      "post": {
        "summary": "Generate a new voting code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "electionId": {
                    "type": "string",
                    "description": "The election id for which generates a one-time-code."
                  }
                }
              },
              "example": {
                "electionId": 1728519885
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string",
                          "description": "The generated code",
                          "example": 123456
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/code/check": {
      "post": {
        "summary": "Check if a given code is valid",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "electionId": {
                    "type": "string",
                    "description": "The id of an election."
                  },
                  "code": {
                    "type": "string",
                    "description": "The code to check"
                  }
                }
              },
              "example": {
                "userId": 2050333334,
                "code": "6e692a06ad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "boolean",
                          "description": "Return true if the code is still valid, false otherwise",
                          "example": true
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/code/verify-owner": {
      "post": {
        "summary": "Check if the code belongs to the user that is making the request (via JWT token)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "electionId": {
                    "type": "string",
                    "description": "The id of an election."
                  },
                  "code": {
                    "type": "string",
                    "description": "The code to check"
                  }
                }
              },
              "example": {
                "electionId": 1728519885,
                "code": "6e692a06ad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "boolean",
                          "description": "Return true if the code is still valid, false otherwise",
                          "example": true
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/election/info/all": {
      "get": {
        "summary": "Return all the election info created",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/election/info/detail/{electionId}": {
      "get": {
        "summary": "Return a specific election created",
        "parameters": [
          {
            "name": "electionId",
            "in": "path",
            "description": "The id of the election to get the info from.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/election/info/": {
      "post": {
        "summary": "Create a new election info",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "goal": {
                    "type": "string",
                    "description": "The goal to reach with this election."
                  },
                  "voters": {
                    "type": "string",
                    "description": "The number of participants to the election."
                  },
                  "startDate": {
                    "type": "string",
                    "description": "The start date of the election in ISO format."
                  },
                  "endDate": {
                    "type": "string",
                    "description": "The end date of the election in ISO format."
                  },
                  "choices": {
                    "type": "array",
                    "description": "An array of string representing the mutually exclusive choices of the election."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an election info",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "electionId": {
                    "type": "string",
                    "description": "The election id to delete"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/election/all": {
      "get": {
        "summary": "Return all the election created",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/election/": {
      "post": {
        "summary": "Create a new election",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "electionId": {
                    "type": "string",
                    "description": "The id of an election info to use."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an election",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "electionId": {
                    "type": "string",
                    "description": "The election id to delete"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/election/vote/{electionId}": {
      "put": {
        "summary": "Cast a vote for the election",
        "parameters": [
          {
            "name": "electionId",
            "in": "path",
            "description": "The id of the election.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "choice": {
                    "type": "string",
                    "description": "The expressed vote."
                  },
                  "userId": {
                    "type": "string",
                    "description": "The id of the user that is casting the vote."
                  },
                  "code": {
                    "type": "string",
                    "description": "The vote code."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notifications/all": {
      "get": {
        "summary": "Return all the notifications for the user",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{notificationId}": {
      "put": {
        "summary": "Mark a notification as read",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "The id of the notification to mark as read",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Return the profile of the user",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a specific user",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "The data to update the user with.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "The first name of the user.",
                  "example": "Jean",
                  "required": false
                },
                "secondName": {
                  "type": "string",
                  "description": "The second name of the user.",
                  "example": "Paù",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Update a specific user",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "The email of the user to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email of the user"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password of the user, this will be encrypted."
                  },
                  "firstName": {
                    "type": "string",
                    "description": "The first name of the user."
                  },
                  "secondName": {
                    "type": "string",
                    "description": "The second name of the user."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/password-forgotten": {
      "put": {
        "summary": "Request to send a new password to the user email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email of the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestError"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TooManyRequestError"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Generic server error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}